name: Code Sanity
on:
    pull_request
jobs:
    unit-tests-with-coverage:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Create directories
          run: |
            make prep-coverage;
        # - name: Check for directory artifact
        #   id: check-artifact
        #   run: |
        #     if curl -sSfI "https://github.com/OWNER/REPO/actions/artifacts" | grep -q "coverage-profiles"; then
        #        echo "coverage_profile_exists=true" >> "$GITHUB_OUTPUT"
        #     else
        #        echo "coverage_profile_exists=false" >> "$GITHUB_OUTPUT"
        #     fi
        # - name: Check artifact existence
        #   id: check-artifact
        #   uses: xSAVIKx/artifact-exists-action@v0
        #   with:
        #     name: coverage-profiles
        - name: Get Previous Successful Run ID
          id: get-run-id
          run: |
            CURRENT_RUN_ID=${{ github.run_id }}
            RESPONSE=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                                        -H "Accept: application/vnd.github.v3+json" \
                                        "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=success")

            echo "API Response: $RESPONSE"

            PREVIOUS_SUCCESSFUL_RUN_ID=$(echo $RESPONSE | jq --arg name "${{github.workflow}}" --argjson exclude_id $CURRENT_RUN_ID '
                                                              .workflow_runs
                                                              | map(select(.name == $name and .id != $exclude_id))
                                                              | max_by(.run_started_at)
                                                              | .id' 
                                                            )

            echo "Previous successful run ID is $PREVIOUS_SUCCESSFUL_RUN_ID"
            echo "previous_run_id=$PREVIOUS_SUCCESSFUL_RUN_ID" >> $GITHUB_OUTPUT
        - name: Download directory artifact
          continue-on-error: true
          if: steps.get-run-id.outputs.previous_run_id != ''
          uses: actions/download-artifact@v4
          with:
            name: coverage-profiles
            path: ./unit-tests
            github-token: ${{ secrets.GITHUB_TOKEN }} # token with actions:read permissions on target repo
            run-id: ${{steps.get-run-id.outputs.previous_run_id}}
            # - name: Check for directory artifact
        #   id: check-artifact
        #   run: |
        #     if curl -sSfI "https://github.com/OWNER/REPO/actions/artifacts" | grep -q "coverage-profiles"; then
        #         echo "coverage_profile_exists=true" >> "$GITHUB_OUTPUT"
        #     else
        #         echo "coverage_profile_exists=false" >> "$GITHUB_OUTPUT"
        #     fi
        # this can be removed later.
        - name: Print directory contents
          run: ls -lah ./unit-tests
        - name: Run coverage for changes
          if: steps.get-run-id.outputs.previous_run_id != ''
          run: | 
            git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | (grep '.go' > ./coverage/changed_files.txt) || echo "No Go files changed"
            make code-coverage-on-changes
            make summarize-coverage
        - name: Run coverage for all
          if: steps.get-run-id.outputs.previous_run_id == ''
          run: |
            make code-coverage
            make summarize-coverage
        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: coverage-profiles
            path: ./unit-tests

    
