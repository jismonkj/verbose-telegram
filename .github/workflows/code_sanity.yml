name: Code Sanity
on:
    pull_request
jobs:
    unit-tests-with-coverage:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Create directories
          run: |
            make prep-coverage;
        - name: Get artifact workflow ID
          id: check-artifact
          run: |
            response=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                                        -H "Accept: application/vnd.github.v3+json" \
                                        "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")

            if echo "$response" | jq -e . >/dev/null 2>&1 && [ "$(echo "$response" | jq '.artifacts | length')" -gt 0 ]; then 
              artifact_name="coverage-profiles"
              branch="${{ github.event.pull_request.head.ref }}"

              artifacts_filtered=$(echo "$response" | jq -r --arg artifact "$artifact_name" --arg branch "$branch" \
                '.artifacts[] | select(.name == $artifact and .workflow_run.head_branch == $branch)')

              workflow_run_id=$(echo "$artifacts_filtered" | jq '.workflow_run.id' | jq -s '.[0]')
              echo "workflow_run_id: $workflow_run_id"
              echo "previous_run_id=$workflow_run_id" >> $GITHUB_OUTPUT
            else
              echo "Invalid api response/no artifacts found"
            fi
        - name: Debug log for workflow id found
          run: |
            echo "steps.check-artifact.outputs.previous_run_id: ${{steps.check-artifact.outputs.previous_run_id}}"
        - name: Download directory artifact
          continue-on-error: true
          if: ${{ steps.check-artifact.outputs.previous_run_id != '' }}
          uses: actions/download-artifact@v4
          with:
            name: coverage-profiles
            path: ./unit-tests
            github-token: ${{ secrets.GITHUB_TOKEN }} # token with actions:read permissions on target repo
            run-id: ${{steps.check-artifact.outputs.previous_run_id}}
            # - name: Check for directory artifact
        #   id: check-artifact
        #   run: |
        #     if curl -sSfI "https://github.com/OWNER/REPO/actions/artifacts" | grep -q "coverage-profiles"; then
        #         echo "coverage_profile_exists=true" >> "$GITHUB_OUTPUT"
        #     else
        #         echo "coverage_profile_exists=false" >> "$GITHUB_OUTPUT"
        #     fi
        # this can be removed later.
        - name: Print directory contents
          run: ls -lah ./unit-tests
        - name: Run coverage for changes
          if: steps.check-artifact.outputs.previous_run_id != ''
          run: | 
            git fetch origin ${{ github.event.pull_request.base.ref }}
            git fetch origin ${{ github.event.pull_request.head.ref }}
            git diff --name-only origin/${{ github.event.pull_request.base.ref }} | (grep '.go' > ./coverage/changed_files.txt) || echo "No Go files changed"
            make code-coverage-on-changes
            make summarize-coverage
        - name: Run coverage for all
          if: steps.check-artifact.outputs.previous_run_id == ''
          run: |
            make code-coverage
            make summarize-coverage
        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: coverage-profiles
            path: ./unit-tests

    
